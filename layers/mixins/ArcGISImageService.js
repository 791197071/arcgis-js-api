// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.12/esri/copyright.txt for details.

//  copyright

/**
             * The copyright text as defined by the service.
             *
             * @name copyright
             * @type {string}
             * @memberof module:esri/layers/mixins/ArcGISImageService
             *
             */

define(["require","exports","../../core/tsSupport/assignHelper","../../core/tsSupport/declareExtendsHelper","../../core/tsSupport/decorateHelper","../../core/tsSupport/generatorHelper","../../core/tsSupport/awaiterHelper","../../Graphic","../../renderers","../../request","../../core/asyncUtils","../../core/Error","../../core/jsonMap","../../core/lang","../../core/Logger","../../core/maybe","../../core/promiseUtils","../../core/urlUtils","../../core/accessorSupport/decorators","../../core/accessorSupport/ensureType","../../geometry/Extent","../../geometry/Point","../../geometry/SpatialReference","./ArcGISService","../support/commonProperties","../support/DimensionalDefinition","../support/ExportImageServiceParameters","../support/Field","../support/imageryRendererUtils","../support/MosaicRule","../support/PixelBlock","../support/RasterFunction","../support/RasterInfo","../support/RasterJobHandler","../support/rasterFormats/RasterCodec","../../renderers/support/jsonUtils","../../tasks/ImageServiceIdentifyTask","../../tasks/QueryTask","../../tasks/support/FeatureSet","../../tasks/support/ImageServiceIdentifyParameters"],function(e,t,r,i,n,a,o,s,l,u,p,c,d,f,y,m,h,g,v,R,b,x,I,S,w,O,T,P,F,_,D,N,V,j,C,M,A,J,q,U){var E=y.getLogger("esri.layers.mixins.ArcGISImageService"),k=d.strict()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),z=d.strict()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),L=d.strict()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"});return function(e){function t(t){var r=e.call(this)||this;return r._functionRasterInfos={},r._rasterJobHandler=null,r._defaultServiceMosaicRule=null,r.rasterAttributeTableFieldPrefix="Raster.",r.adjustAspectRatio=null,r.bandCount=null,r.bandIds=void 0,r.capabilities=null,r.compressionQuality=void 0,r.compressionTolerance=.01,r.copyright=null,r.exportImageServiceParameters=null,r.rasterInfo=null,r.fields=null,r.fullExtent=null,r.hasMultidimensions=!1,r.hasRasterAttributeTable=!1,r.imageMaxHeight=4100,r.imageMaxWidth=4100,r.interpolation=void 0,r.multidimensionalInfo=null,r.noData=null,r.noDataInterpretation=void 0,r.objectIdField=null,r.pixelSizeX=null,r.pixelSizeY=null,r.pixelFilter=null,r.raster=void 0,r.viewId=void 0,r.renderer=null,r.rasterAttributeTable=null,r.rasterFunctionInfos=null,r.serviceDataType=null,r.spatialReference=null,r.pixelType=null,r.serviceRasterInfo=null,r.url=null,r.version=null,r}return i(t,e),t.prototype.initialize=function(){this._set("exportImageServiceParameters",new T.ExportImageServiceParameters({layer:this}))},Object.defineProperty(t.prototype,"queryTask",{get:function(){return new J({url:this.url})},enumerable:!0,configurable:!0}),t.prototype.readCapabilities=function(e,t,r){return e&&e.split(",").map(function(e){return e.trim()})},t.prototype.writeCompressionQuality=function(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)},t.prototype.writeCompressionTolerance=function(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)},Object.defineProperty(t.prototype,"definitionExpression",{get:function(){return this._get("definitionExpression")||this.mosaicRule&&this.mosaicRule.where},set:function(e){this._set("definitionExpression",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"domainFields",{get:function(){return E.warn("domainFields is deprecated, filter it out from ImageryLayer.fields instead."),this.fields&&this.fields.filter(function(e){return e.domain&&"coded-value"===e.domain.type})},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"format",{get:function(){return this._get("format")||(null!=this.pixelFilter?"lerc":"jpgpng")},set:function(e){e&&["png","png8","png24","png32","jpg","bmp","jpgpng","lerc","tiff"].indexOf(e.toLowerCase())>-1&&this._set("format",e.toLowerCase())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"mosaicRule",{set:function(e){var t=e;t&&t.mosaicMethod&&(t=_.fromJSON(r({},t.toJSON(),{mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation}))),this._set("mosaicRule",t)},enumerable:!0,configurable:!0}),t.prototype.readMosaicRule=function(e,t){return _.fromJSON(e||t.mosaicRule||t)},t.prototype.writeMosaicRule=function(e,t,r,i){var n=this.mosaicRule,a=this.definitionExpression;n?a!==n.where&&(n=n.clone(),n.where=a):a&&(n=new _({where:a})),this._isValidCustomizedMosaicRule(n)&&(t[r]=n.toJSON())},t.prototype.writeNoData=function(e,t,r){null!=e&&"number"==typeof e&&(t[r]=e)},t.prototype.readObjectIdField=function(e,t){if(!e){var r=t.fields.filter(function(e){return"esriFieldTypeOID"===e.type||"oid"===e.type});e=r&&r[0]&&r[0].name}return e},Object.defineProperty(t.prototype,"parsedUrl",{get:function(){return this.url?g.urlToObject(this.url):null},enumerable:!0,configurable:!0}),t.prototype.readRenderer=function(e,t,r){var i=t&&t.layerDefinition,n=M.read(e,i,r)||void 0;return F.isSupportedRendererType(n)||E.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),n},Object.defineProperty(t.prototype,"rasterFields",{get:function(){var e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new P({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new P({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new P({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),n=this.fields?f.clone(this.fields):[];n.push(r),this.capabilities&&this.capabilities.some(function(e){return"catalog"===e.toLowerCase()})&&this.fields&&this.fields.length>0&&n.push(t),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some(function(e){return"none"===e.name.toLowerCase()})&&n.push(i),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(function(e){return"none"!==e.name.toLowerCase()}).forEach(function(e){n.push(new P({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))}),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(n.push(new P({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),n.push(new P({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));var a=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(a&&a.length>0){var o=a.filter(function(e){return"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase()}).map(function(t){var r=f.clone(t);return r.name=e+t.name,r});n=n.concat(o)}return n},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"renderingRule",{set:function(e){var t=e;t&&t.rasterFunction&&(t=N.fromJSON(r({},t.toJSON(),{rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments}))),this._set("renderingRule",t)},enumerable:!0,configurable:!0}),t.prototype.readRenderingRule=function(e,t){var r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?N.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null},t.prototype.readSpatialReference=function(e,t){var r=e||t.extent.spatialReference;return r?I.fromJSON(r):null},t.prototype.readPixelType=function(e,t){return L.fromJSON(e)||e},t.prototype.writePixelType=function(e,t,r){(m.isNone(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=L.toJSON(e))},t.prototype.readVersion=function(e,t){var r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r},t.prototype.applyFilter=function(e){if(!this.pixelFilter)return e;var t=this._clonePixelData(e);return this.pixelFilter(t),t},t.prototype.fetchImage=function(e,t,r,i){var n=this;if(void 0===i&&(i={}),null==e||null==t||null==r)return h.reject(new c("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));var a=this.renderer||this.popupEnabled?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):this.generateRasterInfo(null);return p.safeCast(a).then(function(a){a&&(n.rasterInfo=a);var o=n.getExportImageServiceParameters(e,t,r,i.timeExtent),s={imageServiceParameters:o,imageProps:{extent:e,width:t,height:r,format:n.format},requestAsImageElement:i.requestAsImageElement&&!n.pixelFilter||!1,signal:i.signal};return n._requestArrayBuffer(s)})},t.prototype.fetchKeyProperties=function(e){var t=e&&e.renderingRule&&e.renderingRule.toJSON();return u(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(function(e){return e.data})},t.prototype.fetchRasterAttributeTable=function(e){var t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1||!this.hasRasterAttributeTable?h.reject(new c("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):u(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(function(e){return q.fromJSON(e.data)})},t.prototype.generateRasterInfo=function(e,t){return o(this,void 0,void 0,function(){var i,n;return a(this,function(a){switch(a.label){case 0:return e?this._functionRasterInfos[e.functionName]?[2,this._functionRasterInfos[e.functionName]]:[4,u(this.parsedUrl.path,r({query:this._getQueryParams({renderingRule:e}),responseType:"json"},t))]:[2,null];case 1:return i=a.sent().data,[4,this._fetchRasterAux(r({serviceInfo:i,renderingRule:e},t))];case 2:return n=a.sent(),this._functionRasterInfos[e.functionName]=n,[2,n]}})})},t.prototype.getExportImageServiceParameters=function(e,t,i,n){e=e.clone().shiftCentralMeridian();var a=e.spatialReference&&(e.spatialReference.wkid||JSON.stringify(e.spatialReference.toJSON()));m.isSome(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);var o=this.exportImageServiceParameters.toJSON(),s=o.bandIds,l=o.noData,u=o.mosaicRule,p=o.renderingRule;s instanceof Array&&s.length>0&&(o.bandIds=s.join(",")),l instanceof Array&&l.length>0&&(o.noData=l.join(","));var c=this.timeInfo;u&&u.multidimensionalDefinition&&n&&c&&c.startField&&(u.multidimensionalDefinition=u.multidimensionalDefinition.filter(function(e){return e.dimensionName!==c.startField})),o.mosaicRule=u&&JSON.stringify(u),o.renderingRule=p&&JSON.stringify(p);var d={};if(n){var f=n.toJSON(),y=f.start,h=f.end;y&&h&&y===h?d.time=""+y:null==y&&null==h||(d.time=(null==y?"null":y)+","+(null==h?"null":h))}return r({bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:a,imageSR:a,size:t+","+i},o,d)},t.prototype.queryRasters=function(e){return this.queryTask.execute(e)},t.prototype.queryVisibleRasters=function(e,t){var r=this;if(!e)return h.reject(new c("imagery-layer: query-visible-rasters","missing query parameter"));var i=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1},n=i.pixelSize,a=i.returnDomainValues,o=i.returnTopmostRaster,s=i.showNoDataRecords,l=!1,u=null;e.outFields&&this.version>=10.4&&(u=e.outFields.filter(function(e){return e.toLowerCase().indexOf("raster.servicepixelvalue")>-1&&e.length>"raster.servicepixelvalue".length}).map(function(e){return new N({functionName:e.slice("raster.servicepixelvalue".length+1).replace("Raw","None")})}),l=e.outFields.some(function(e){return-1===e.toLowerCase().indexOf("raster.servicepixelvalue")}),0===u.length&&(u=null));var p=!e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),d=new U({geometry:e.geometry,timeExtent:e.timeExtent,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,renderingRules:u,pixelSize:n,returnCatalogItems:l,returnGeometry:p,maxItemCount:o?1:null}),f=new A({url:this.url}),y=this.generateRasterInfo(this.renderingRule);return h.create(function(e,t){y.then(function(){f.execute(d).then(function(t){return e(r._processVisibleRastersResponse(t,{returnDomainValues:a,renderingRules:u,showNoDataRecords:s}))}).catch(function(){throw new c("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")})})})},t.prototype._fetchService=function(e){return o(this,void 0,void 0,function(){var t,r,i,n,o,s,l,p=this;return a(this,function(a){switch(a.label){case 0:return t=this.resourceInfo,this.resourceInfo?[3,2]:[4,u(this.parsedUrl.path,{query:this._getQueryParams(),responseType:"json",signal:e})];case 1:r=a.sent(),i=r.data,n=r.ssl,t=i,n&&(this.url=this.url.replace(/^http:/i,"https:")),a.label=2;case 2:return this.read(t,{origin:"service",url:this.parsedUrl}),this._defaultServiceMosaicRule=_.fromJSON(t),this._rasterJobHandler=new j,o=this._rasterJobHandler.initialize(),m.isSome(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo),s=this.serviceRasterInfo?h.resolve(this.serviceRasterInfo):this._fetchRasterAux({serviceInfo:t,signal:e}).then(function(e){p._set("serviceRasterInfo",e),p._set("rasterInfo",e)}),l=this.renderingRule?this.generateRasterInfo(this.renderingRule,{signal:e}):null,[2,h.all([o,s,l]).then(function(e){var t=m.isSome(p.serviceRasterInfo)&&p.serviceRasterInfo.multidimensionalInfo;t&&p._updateMultidimensionalDefinition(t)})]}})})},t.prototype._clonePixelData=function(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock&&e.pixelBlock.clone()}},t.prototype._getQueryParams=function(e){var t=this,i=t.raster,n=t.viewId;return r({raster:i,viewId:n,f:"json"},e)},t.prototype._decodePixelBlock=function(e,t,r){return this._rasterJobHandler?this._rasterJobHandler.decode({data:e,options:t}):C.decode(e,t,r)},t.prototype._fetchRasterAux=function(e){var t=e&&e.serviceInfo;if(!t)return h.reject(new c("imagery-layer:fetch-metadata","valid serviceInfo is required"));var r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,n=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&u(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then(function(e){return q.fromJSON(e.data)}).catch(function(e){return null}),a=!!(t.hasColormap&&this.version>=10.1)&&u(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then(function(e){return e.data&&e.data.colormap}),o=!!(t.hasHistograms&&this.version>=10.1)&&u(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then(function(e){return e.data&&e.data.histograms}),s=this.version>=10.3&&u(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then(function(e){return e.data}).catch(function(e){}),l=!!(t.hasMultidimensions&&this.version>=10.3)&&u(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:i}).then(function(e){return e.data&&e.data.multidimensionalInfo});return h.all([n,a,o,s,l]).then(function(e){var r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(var i=0;i<t.minValues.length;i++)r.push({min:t.minValues[i],max:t.maxValues[i],avg:t.meanValues[i],stddev:t.stdvValues[i]})}var n=I.fromJSON(t.spatialReference||t.extent.spatialReference);return new V({bandCount:t.bandCount,extent:b.fromJSON(t.extent),spatialReference:n,pixelSize:new x({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||null,multidimensionalInfo:e[4]||null})})},t.prototype._requestArrayBuffer=function(e){var t=this,i=e.imageProps,n=e.requestAsImageElement,a=e.signal;return n&&!this.pixelFilter&&i.format&&i.format.indexOf("png")>-1?u(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams(r({f:"image"},e.imageServiceParameters)),signal:a}).then(function(e){return{imageElement:e.data,params:i}}):u(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams(r({f:"image"},e.imageServiceParameters)),signal:a}).then(function(e){var n=e.data,o=i.format||"jpgpng",s=o;if("bsq"!==s&&"bip"!==s&&(s=C.getFormat(n)),!s){throw new c("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(n)))}var l=o.indexOf("png")>-1&&("png"===s||"jpg"===s),u={signal:a};return l?C.decode(n,r({useCanvas:!0},i),u).then(function(e){return{pixelData:{pixelBlock:e,extent:i.extent},params:i}}):t._decodePixelBlock(n,{width:i.width,height:i.height,planes:null,pixelType:null,noDataValue:null,format:o},u).then(function(e){return{pixelData:{pixelBlock:e,extent:i.extent},params:i}})})},t.prototype._isValidCustomizedMosaicRule=function(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())},t.prototype._updateMultidimensionalDefinition=function(e){if(!this._isValidCustomizedMosaicRule(this.mosaicRule)){var t=e.variables[0].dimensions,r=[];for(var i in t)if(t.hasOwnProperty(i)){var n=t[i],a=n.extent,o=!0,s=[a[0]];n.hasRanges&&!0===n.hasRanges?(o=!1,s=[n.values[0]]):"stdz"===n.name.toLowerCase()&&Math.abs(a[1])<=Math.abs(a[0])&&(s=[a[1]]),r.push(new O({variableName:"",dimensionName:t[i].name,isSlice:o,values:s}))}if(r.length>0){this.mosaicRule=this.mosaicRule||new _;var l=this.mosaicRule.multidimensionalDefinition;(!l||l&&l.length<=0)&&(this.mosaicRule.multidimensionalDefinition=r)}}},t.prototype._processVisibleRastersResponse=function(e,t){t=t||{};var r=e.value,i=t.renderingRules,n=t.showNoDataRecords,a=t.returnDomainValues,o=e.processedValues,l=e.catalogItems&&e.catalogItems.features,u=e.properties&&e.properties.Values&&e.properties.Values.map(function(e){return e.replace(/ /gi,", ")})||[],p=this.objectIdField||"ObjectId",c=r.toLowerCase().indexOf("nodata")>-1,d=[];if(r&&!l&&!c){var f={};f[p]=0;var y=new s(this.fullExtent,null,f);u=[r],l=[y]}if(!l)return[];for(var m,h,g,v=0;v<l.length;v++){if(m=l[v],null!=r&&!c){if(h=u[v],"nodata"===h.toLowerCase()&&!n)continue;m.attributes["Raster.ItemPixelValue"]=h,m.attributes["Raster.ServicePixelValue"]=r,this._updateFeatureWithMagDirValues(m,h),this._updateFeatureWithRasterAttributeTableValues(m,h)}if(m.sourceLayer=this,a&&this._updateFeatureWithDomainValues(m),i&&o&&i.length===o.length)for(var R=0;R<i.length;R++)g="none"===i[R].functionName.toLowerCase()?"Raw":i[R].functionName,m.attributes["Raster.ServicePixelValue."+g]=o[R];d.push(l[v])}return d},t.prototype._updateFeatureWithRasterAttributeTableValues=function(e,t){var r=this,i=this.rasterInfo&&this.rasterInfo.attributeTable,n=i&&i.features;if(n){var a=i.fields,o=a.map(function(e){return e.name}).filter(function(e){return"value"===e.toLowerCase()}),s=o&&o[0];if(s){var l=n.filter(function(e){return e.attributes[s]===(null!=t?parseInt(t,10):null)});l&&l[0]&&a.forEach(function(t){e.attributes[r.rasterAttributeTableFieldPrefix+t.name]=l[0].attributes[t.name]})}}},t.prototype._updateFeatureWithMagDirValues=function(e,t){if(this.pixelFilter&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType)){var r=t.replace(" ",",").split(",").map(function(e){return parseFloat(e)}),i=r.map(function(e){return[e]}),n=r.map(function(e){return{minValue:e,maxValue:e,noDataValue:null}}),a=new D({height:1,width:1,pixelType:"f32",pixels:i,statistics:n});this.pixelFilter({pixelBlock:a,extent:new b(0,0,0,0,this.spatialReference)}),e.attributes["Raster.Magnitude"]=a.pixels[0][0],e.attributes["Raster.Direction"]=a.pixels[1][0]}},t.prototype._updateFeatureWithDomainValues=function(e){var t=this.fields&&this.fields.filter(function(e){return e.domain&&"coded-value"===e.domain.type});null!=t&&t.forEach(function(t){var r=e.attributes[t.name];if(null!=r){var i=t.domain.codedValues.filter(function(e){return e.code===r})[0];i&&(e.attributes[t.name]=i.name)}})},n([v.property()],t.prototype,"_functionRasterInfos",void 0),n([v.property()],t.prototype,"_rasterJobHandler",void 0),n([v.property()],t.prototype,"_defaultServiceMosaicRule",void 0),n([v.property()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),n([v.property({readOnly:!0,dependsOn:["url"]})],t.prototype,"queryTask",null),n([v.property()],t.prototype,"adjustAspectRatio",void 0),n([v.property({readOnly:!0}),v.aliasOf("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),n([v.property({type:[R.Integer],json:{write:!0}})],t.prototype,"bandIds",void 0),n([v.property({readOnly:!0})],t.prototype,"capabilities",void 0),n([v.reader("capabilities")],t.prototype,"readCapabilities",null),n([v.property({type:Number})],t.prototype,"compressionQuality",void 0),n([v.writer("compressionQuality")],t.prototype,"writeCompressionQuality",null),n([v.property({type:Number})],t.prototype,"compressionTolerance",void 0),n([v.writer("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),n([v.property({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),n([v.property({json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],t.prototype,"definitionExpression",null),n([v.property({type:[P],dependsOn:["fields"]})],t.prototype,"domainFields",null),n([v.property({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),n([v.property()],t.prototype,"rasterInfo",void 0),n([v.property({readOnly:!0,type:[P]})],t.prototype,"fields",void 0),n([v.property({type:String,json:{write:!0}})],t.prototype,"format",null),n([v.property({type:b})],t.prototype,"fullExtent",void 0),n([v.property({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),n([v.property({readOnly:!0})],t.prototype,"hasRasterAttributeTable",void 0),n([v.property({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),n([v.property({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),n([v.property({type:String,json:{read:{reader:k.read},write:{writer:k.write}}})],t.prototype,"interpolation",void 0),n([v.property({type:_})],t.prototype,"mosaicRule",null),n([v.reader("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),n([v.writer("mosaicRule")],t.prototype,"writeMosaicRule",null),n([v.property({readOnly:!0}),v.aliasOf("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),n([v.property()],t.prototype,"noData",void 0),n([v.writer("noData")],t.prototype,"writeNoData",null),n([v.property({type:String,json:{read:{reader:z.read},write:{writer:z.write}}})],t.prototype,"noDataInterpretation",void 0),n([v.property({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),n([v.reader("objectIdField")],t.prototype,"readObjectIdField",null),n([v.property({readOnly:!0,dependsOn:["url"]})],t.prototype,"parsedUrl",null),n([v.property({readOnly:!0}),v.aliasOf("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),n([v.property({readOnly:!0}),v.aliasOf("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),n([v.property({type:Function})],t.prototype,"pixelFilter",void 0),n([v.property()],t.prototype,"raster",void 0),n([v.property()],t.prototype,"viewId",void 0),n([v.property({types:l.rasterRendererTypes,json:{read:{source:"layerDefinition.drawingInfo.renderer"},write:{target:"layerDefinition.drawingInfo.renderer"}}})],t.prototype,"renderer",void 0),n([v.reader("renderer")],t.prototype,"readRenderer",null),n([v.property({readOnly:!0}),v.aliasOf("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),n([v.property({readOnly:!0,dependsOn:["fields","rasterInfo"]})],t.prototype,"rasterFields",null),n([v.property({readOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),n([v.property({type:N,json:{write:!0}})],t.prototype,"renderingRule",null),n([v.reader("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),n([v.property()],t.prototype,"serviceDataType",void 0),n([v.property({readOnly:!0,type:I})],t.prototype,"spatialReference",void 0),n([v.reader("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),n([v.property()],t.prototype,"pixelType",void 0),n([v.reader("pixelType")],t.prototype,"readPixelType",null),n([v.writer("pixelType")],t.prototype,"writePixelType",null),n([v.property()],t.prototype,"resourceInfo",void 0),n([v.property({constructOnly:!0,type:V})],t.prototype,"serviceRasterInfo",void 0),n([v.property(w.url)],t.prototype,"url",void 0),n([v.property({readOnly:!0})],t.prototype,"version",void 0),n([v.reader("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=n([v.subclass("esri.layers.mixins.ArcGISImageService")],t)}(v.declared(S))});