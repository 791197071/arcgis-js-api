// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.12/esri/copyright.txt for details.

define(["require","exports","../../../../core/tsSupport/extendsHelper","../../../../core/tsSupport/generatorHelper","../../../../core/tsSupport/awaiterHelper","../../../../Color","../../../../core/compilerUtils","../../../../core/maybe","../../../../core/libs/gl-matrix-2/mat3","../../../../core/libs/gl-matrix-2/mat3f64","../../../../core/libs/gl-matrix-2/mat4","../../../../core/libs/gl-matrix-2/mat4f64","../../../../core/libs/gl-matrix-2/vec3","../../../../core/libs/gl-matrix-2/vec3f64","../../../../core/libs/gl-matrix-2/vec4f64","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/MeshComponent","../../../../geometry/support/webMercatorUtils","../../../../geometry/support/meshUtils/projection","./ElevationAligners","./Graphics3DObject3DGraphicLayer","./Graphics3DSymbolCommonCode","./Graphics3DSymbolLayer","../support/edgeUtils","../support/symbolColorUtils","../../support/debugFlags","../../support/projectionUtils","../../webgl-engine/Stage","../../webgl-engine/lib/Geometry","../../webgl-engine/lib/GeometryData","../../webgl-engine/lib/Object3D","../../webgl-engine/lib/Texture","../../webgl-engine/lib/Util","../../webgl-engine/materials/DefaultMaterial","../../webgl-engine/materials/NativeLineMaterial"],function(e,t,r,a,o,n,i,s,l,c,u,p,f,m,h,d,g,v,y,_,x,b,C,T,w,O,A,M,S,E,N,I,P,F,R){Object.defineProperty(t,"__esModule",{value:!0});var V=P.VertexAttrConstants,L=function(e){function t(t,r,a,o){var n=e.call(this,t,r,a,o)||this;return n._edgeStageObjects=new Set,n._materials=new Map,n._textures=new Map,n}return r(t,e),t.prototype.doLoad=function(){return o(this,void 0,void 0,function(){return a(this,function(e){return O.DRAW_MESH_GEOMETRY_NORMALS&&(this._debugVertexNormalMaterial=new R({color:[1,0,1,1]},"debugVertexNormal"),this._debugFaceNormalMaterial=new R({color:[0,1,1,1]},"debugFAceNormal")),[2]})})},t.prototype.destroy=function(){var t=this;e.prototype.destroy.call(this),this._materials.forEach(function(e){t._context.stage.remove(M.ModelContentType.MATERIAL,e.material.id)}),this._textures.forEach(function(e){t._context.stage.remove(M.ModelContentType.TEXTURE,e.id)}),this._materials.clear(),this._textures.clear()},t.prototype.createGraphics3DGraphic=function(e){var t=e.graphic;if("mesh"!==t.geometry.type)return this.logger.warn("unsupported geometry type for fill on mesh-3d symbol: "+t.geometry.type),null;if(!this._validateGeometry(t.geometry))return null;var r="graphic"+t.uid,a=this.getGraphicElevationContext(t),o=e.renderingInfo;return this._createAs3DShape(t,o,a,r,t.uid)},t.prototype.layerOpacityChanged=function(){var e=this,t=this._getLayerOpacity();if(this._materials.forEach(function(r){r.material.setParameterValues({layerOpacity:t});var a=r.material.getParameters();e._setMaterialTransparentParameter(a,r),r.material.setParameterValues({transparent:a.transparent})}),this._edgeStageObjects.size>0){var r=this._context.stage.renderView.ensureEdgeView(),a=this._getLayerOpacity();this._edgeStageObjects.forEach(function(e){return r.updateAllComponentOpacities(e,[a])})}return!0},t.prototype.layerElevationInfoChanged=function(e,t){return this.updateGraphics3DGraphicElevationInfo(e,t,b.needsElevationUpdates3D)},t.prototype.slicePlaneEnabledChanged=function(e,t){var r=this;if(this._materials.forEach(function(e){e.material.setParameterValues({slicePlaneEnabled:r._context.slicePlaneEnabled})}),this._edgeStageObjects.size>0){var a=this._context.stage.renderView.ensureEdgeView(),o=this._createEdgeMaterial(a);if(s.isSome(o)){var n=[o];this._edgeStageObjects.forEach(function(e){return a.updateAllComponentMaterials(e,n,{slicePlaneEnabled:r._context.slicePlaneEnabled},!1)})}}return!0},t.prototype.pixelRatioChanged=function(e,t){return!0},t.prototype._requiresSymbolVertexColors=function(){return this._isPropertyDriven("color")||this._isPropertyDriven("opacity")},t.prototype._colorOrTextureUid=function(e){return e?e instanceof n?e.toHex():e.contentHash:"-"},t.prototype._materialProperties=function(e,t,r){var a,o,n,i,s,l,c,u,p,f=this._requiresSymbolVertexColors();t.material&&(o=t.material.color,a=this._colorOrTextureUid(t.material.color),n=t.material.colorTexture,i=this._colorOrTextureUid(t.material.colorTexture),s=t.material.normalTexture,l=this._colorOrTextureUid(t.material.normalTexture),c=t.material.doubleSided,u=t.material.alphaCutoff,p=t.material.alphaMode);var m=!!e.vertexAttributes.color,h=!!e.vertexAttributes.tangent;return{hasSymbolVertexColors:f,hasVertexColors:m,hasVertexTangents:h,color:o,colorTexture:n,normalTexture:s,uid:"vc:"+m+",vt:"+h+",vct"+r+",svc:"+f+",cmuid:"+a+",ctmuid:"+i+",ntmuid:"+l+",ds:"+c+",ac:"+u+",am:"+p}},t.prototype._setInternalColorValueParameters=function(e,t){t.diffuse=n.toUnitRGB(e),t.opacity=e.a},t.prototype._getLoadableTextureResource=function(e){return e.data?e.data instanceof HTMLImageElement?e.data.complete?e.data:e.data.src:e.data:e.url},t.prototype._getInternalTextureId=function(e,t){var r=this._getLoadableTextureResource(e);if(r){var a=e.contentHash,o=this._textures.get(a);return o||(o=new I(r,t+"_"+a+"_tex",{mipmap:!0,wrap:this._castTextureWrap(e.wrap),noUnpackFlip:!0}),this._textures.set(a,o),this._context.stage.add(M.ModelContentType.TEXTURE,o)),o.id}},t.prototype._castTextureWrap=function(e){if(void 0===e&&(e="repeat"),"string"==typeof e){var t=this._castTextureWrapIndividual(e);return{s:t,t:t}}return{s:this._castTextureWrapIndividual(e.horizontal),t:this._castTextureWrapIndividual(e.vertical)}},t.prototype._castTextureWrapIndividual=function(e){switch(e){case"clamp":return 33071;case"mirror":return 33648;case"repeat":default:return 10497}},t.prototype._setInternalMaterialParameters=function(e,t,r){e.color&&this._setInternalColorValueParameters(e.color,r),e.colorTexture&&(r.textureId=this._getInternalTextureId(e.colorTexture,t)),e.hasVertexTangents&&e.normalTexture&&(r.normalTextureId=this._getInternalTextureId(e.normalTexture,t))},t.prototype._setExternalMaterialParameters=function(e){var t=this._isPropertyDriven("color"),r=s.isSome(this.symbolLayer.material)?this.symbolLayer.material.colorMixMode:null;if(t)e.externalColor=h.vec4f64.ONES;else{var a=s.isSome(this.symbolLayer.material)?this.symbolLayer.material.color:null;s.isSome(a)?e.externalColor=n.toUnitRGBA(a):(r=null,e.externalColor=h.vec4f64.ONES)}r&&(e.colorMixMode=r)},t.prototype._hasTransparentVertexColors=function(e){var t=e.vertexAttributes.color;if(!t)return!1;for(var r=3;r<t.length;r+=4)if(255!==t[r])return!0;return!1},t.prototype._getOrCreateMaterial=function(e,t){var r=t.material&&t.material.color,a=t.material&&t.material.colorTexture,o=this._hasTransparentVertexColors(e)||r&&r.a<1||a&&a.transparent,n=this._materialProperties(e,t,o),i=this._materials.get(n.uid);if(i)return i.material;var s={material:null,isComponentTransparent:o,alphaMode:t.material?t.material.alphaMode:"opaque"},l=this._getStageIdHint(),c={specular:m.vec3f64.ZEROS,vertexColors:n.hasVertexColors,symbolColors:n.hasSymbolVertexColors,vertexTangents:n.hasVertexTangents,ambient:m.vec3f64.ZEROS,diffuse:m.vec3f64.ONES,opacity:1,doubleSided:!0,doubleSidedType:"winding-order",cullFace:"none",layerOpacity:this._getLayerOpacity(),slicePlaneEnabled:this._context.slicePlaneEnabled,textureInitTransparent:!0};t.material&&(c.doubleSided=t.material.doubleSided,c.cullFace=t.material.doubleSided?"none":"back",c.textureAlphaCutoff=t.material.alphaCutoff),this._setInternalMaterialParameters(n,l,c),this._setExternalMaterialParameters(c),this._setMaterialTransparentParameter(c,s);var u=new F(c,l+"_"+n.uid+"_mat");return s.material=u,this._materials.set(n.uid,s),this._context.stage.add(M.ModelContentType.MATERIAL,u),u},t.prototype._setMaterialTransparentParameter=function(e,t){var r=this._isPropertyDriven("opacity");e.transparent=r||t.isComponentTransparent||e.layerOpacity<1||e.opacity<1||e.externalColor&&e.externalColor[3]<1,"auto"===t.alphaMode?e.textureAlphaMode=e.transparent?"maskBlend":"opaque":e.textureAlphaMode=t.alphaMode},t.prototype._addDebugNormals=function(e,t,r,a){for(var o,n,i,s,l=t.length,c=e.spatialReference.isGeographic?20015077/180:1,u=.1*Math.max(e.extent.width*c,e.extent.height*c,e.extent.zmax-e.extent.zmin),m=[],h=[],d=[],g=[],v=0;v<l;v++)for(var y=t[v],_=y.data.getAttribute(V.POSITION),x=y.data.getAttribute(V.NORMAL),b=y.data.getIndices(V.POSITION),C=y.data.getIndices(V.NORMAL),T=_.data,w=x.data,O=0;O<b.length;O++){for(var A=3*b[O],M=3*C[O],N=0;N<3;N++)m.push(T[A+N]);for(var N=0;N<3;N++)m.push(T[A+N]+w[M+N]*u);if(h.push(h.length),h.push(h.length),O%3==0){this._calculateFaceNormal(T,b,O,D),this._getFaceVertices(T,b,O,U,j,G),f.vec3.add(U,U,j),f.vec3.add(U,U,G),f.vec3.scale(U,U,1/3);for(var N=0;N<3;N++)d.push(U[N]);for(var N=0;N<3;N++)d.push(U[N]+D[N]*u);g.push(g.length),g.push(g.length)}}var I=(o={},o[V.POSITION]={data:new Float64Array(m),size:3},o),P=(n={},n[V.POSITION]=new Uint32Array(h),n),F=new E(I,P,void 0,"line"),R=new S(F,"debugVertexNormal");R.singleUse=!0,t.push(R),r.push(this._debugVertexNormalMaterial),a.push(p.mat4f64.clone(a[0]));var I=(i={},i[V.POSITION]={data:new Float64Array(d),size:3},i),P=(s={},s[V.POSITION]=new Uint32Array(g),s),F=new E(I,P,void 0,"line"),R=new S(F,"debugFaceNormal");R.singleUse=!0,t.push(R),r.push(this._debugFaceNormalMaterial),a.push(p.mat4f64.clone(a[0]))},t.prototype._createAs3DShape=function(e,t,r,a,o){var n=this,i=e.geometry;if("mesh"!==i.type)return null;var l=this._createGeometryInfo(i,t,a);if(!l)return null;var c=l.geometries,u=l.materials,p=l.transformations,f=l.objectTransformation;O.DRAW_MESH_GEOMETRY_NORMALS&&this._addDebugNormals(i,c,u,p);var m=new N({geometries:c,materials:u,transformations:p,castShadow:!0,metadata:{layerUid:this._context.layer.uid,graphicUid:o},idHint:a});m.objectTransformation=f;var h=function(e){var t=n._context.stage.renderView.ensureEdgeView();t.removeObject(e),n._edgeStageObjects.delete(e);var r=n._createEdgeMaterial(t);s.isSome(r)&&(n._edgeStageObjects.add(e),t.addObject(e,[r],{slicePlaneEnabled:n._context.slicePlaneEnabled},!n._context.isAsync,{mergeGeometries:!0}))};h(m);var d=function(e,t,r,a,o){var n=_.perObjectElevationAligner(e,t,r,a,o);return h(m),n},g=new x(this,m,c,null,null,d,r);g.needsElevationUpdates=b.needsElevationUpdates3D(r.mode);var v=i.extent.center.clone();return v.z=0,g.elevationContext.centerPointInElevationSR=v,g.alignedTerrainElevation=d(g,g.elevationContext,this._context.elevationProvider,this._context.renderCoordsHelper,this._context.featureExpressionInfoContext),g},t.prototype._createComponentNormals=function(e,t,r,a){var o=r.shading||"flat";switch(o){case"source":return this._createComponentNormalsSource(e,t,r,a);case"flat":return this._createComponentNormalsFlat(e,r,a);case"smooth":return this._createComponentNormalsSmooth(e,r,a);default:i.neverReached(o)}},t.prototype._createComponentNormalsSource=function(e,t,r,a){if(!t)return this._createComponentNormalsFlat(e,r,a);var o=!1;if(!r.trustSourceNormals)for(var n=0;n<a.length;n+=3){this._calculateFaceNormal(e,a,n,D);for(var i=0;i<3;i++){var s=3*a[n+i];U[0]=t[s+0],U[1]=t[s+1],U[2]=t[s+2],f.vec3.dot(D,U)<0&&(t[s+0]=-t[s+0],t[s+1]=-t[s+1],t[s+2]=-t[s+2],o=!0)}}return{normals:t,indices:a,didFlipNormals:o}},t.prototype._createComponentNormalsFlat=function(e,t,r){for(var a=new Float32Array(r.length),o=new Uint32Array(3*r.length),n=0;n<r.length;n+=3)for(var i=this._calculateFaceNormal(e,r,n,D),s=0;s<3;s++)a[n+s]=i[s],o[n+s]=n/3;return{normals:a,indices:o,didFlipNormals:!1}},t.prototype._createComponentNormalsSmooth=function(e,t,r){for(var a={},o=0;o<r.length;o+=3)for(var n=this._calculateFaceNormal(e,r,o,D),i=0;i<3;i++){var s=r[o+i],l=a[s];l||(l={normal:m.vec3f64.create(),count:0},a[s]=l),f.vec3.add(l.normal,l.normal,n),l.count++}for(var c=new Float32Array(3*r.length),u=new Uint32Array(3*r.length),o=0;o<r.length;o++){var s=r[o],l=a[s];1!==l.count&&(f.vec3.normalize(l.normal,l.normal),l.count=1);for(var i=0;i<3;i++)c[3*o+i]=l.normal[i];u[o]=o}return{normals:c,indices:u,didFlipNormals:!1}},t.prototype._getFaceVertices=function(e,t,r,a,o,n){var i=3*t[r+0],s=3*t[r+1],l=3*t[r+2];a[0]=e[i+0],a[1]=e[i+1],a[2]=e[i+2],o[0]=e[s+0],o[1]=e[s+1],o[2]=e[s+2],n[0]=e[l+0],n[1]=e[l+1],n[2]=e[l+2]},t.prototype._calculateFaceNormal=function(e,t,r,a){return this._getFaceVertices(e,t,r,U,j,G),f.vec3.subtract(j,j,U),f.vec3.subtract(G,G,U),f.vec3.cross(U,j,G),f.vec3.normalize(a,U),a},t.prototype._getOrCreateComponents=function(e){return e.components?e.components:q},t.prototype._createPositionBuffer=function(e){var t=e.vertexAttributes.position,r=new Float64Array(t.length),a=this._context.renderSpatialReference;return b.reproject(e.vertexAttributes.position,0,e.spatialReference,r,0,a,t.length/3),r},t.prototype._createNormalBuffer=function(e,t){var r=e.vertexAttributes.normal;if(!r)return null;if("local"===this._context.layerView.view.viewingMode)return r;var a=e.vertexAttributes.position,o=new Float32Array(r.length);return y.projectNormalToECEF(r,a,t,e.spatialReference,o)},t.prototype._createTangentBuffer=function(e,t){var r=e.vertexAttributes.tangent;if(!r)return null;if("local"===this._context.layerView.view.viewingMode)return r;var a=e.vertexAttributes.position,o=new Float32Array(r.length);return y.projectTangentToECEF(r,a,t,e.spatialReference,o)},t.prototype._createColorBuffer=function(e){return e.vertexAttributes.color},t.prototype._createSymbolColorBuffer=function(e){if(this._requiresSymbolVertexColors()){var t=this._getVertexOpacityAndColor(e),r=s.get(this.symbolLayer,"material","colorMixMode"),a=new Uint8Array(4);return w.encodeSymbolColor(t,r,a),a}return null},t.prototype._createColorIndices=function(e,t){for(var r=new Uint32Array(t.length),a=0;a<r.length;a++)r[a]=0;return r},t.prototype._createBuffers=function(e,t){var r=e.vertexAttributes&&e.vertexAttributes.position;if(!r)return this.logger.warn("Mesh geometry must contain position vertex attributes"),null;var a=e.vertexAttributes.normal,o=e.vertexAttributes.uv,n=e.vertexAttributes.tangent;if(a&&a.length!==r.length)return this.logger.warn("Mesh normal vertex buffer must contain the same number of elements as the position buffer"),null;if(n&&n.length/4!=r.length/3)return this.logger.warn("Mesh tangent vertex buffer must contain the same number of elements as the position buffer"),null;if(o&&o.length/2!=r.length/3)return this.logger.warn("Mesh uv vertex buffer must contain the same number of elements as the position buffer"),null;var i=this._createPositionBuffer(e),s=this._createColorBuffer(e),l=this._createSymbolColorBuffer(t),c=this._createNormalBuffer(e,i);return{positionBuffer:i,normalBuffer:c,tangentBuffer:this._createTangentBuffer(e,i),uvBuffer:o,colorBuffer:s,symbolColorBuffer:l,objectTransformation:this._transformCenterLocal(e,i,c)}},t.prototype._transformCenterLocal=function(e,t,r){var a=e.extent.center,o=this._context.renderSpatialReference;B[0]=a.x,B[1]=a.y,B[2]=0;var n=p.mat4f64.create();A.computeLinearTransformation(e.spatialReference,B,n,o),u.mat4.invert(z,n);for(var i=0;i<t.length;i+=3)U[0]=t[i+0],U[1]=t[i+1],U[2]=t[i+2],f.vec3.transformMat4(U,U,z),t[i+0]=U[0],t[i+1]=U[1],t[i+2]=U[2];if(r){l.mat3.fromMat4(H,n),l.mat3.transpose(H,H);for(var i=0;i<r.length;i+=3)U[0]=r[i+0],U[1]=r[i+1],U[2]=r[i+2],f.vec3.transformMat3(U,U,H),r[i+0]=U[0],r[i+1]=U[1],r[i+2]=U[2]}return n},t.prototype._validateFaces=function(e,t){var r=e.vertexAttributes.position.length/3,a=t.faces;if(a){for(var o=-1,n=0;n<a.length;n++){var i=a[n];i>o&&(o=i)}if(r<=o)return this.logger.warn("Vertex index "+o+" is out of bounds of the mesh position buffer"),!1}else if(r%3!=0)return this.logger.warn("Mesh position buffer length must be a multiple of 9 if no component faces are defined (3 values per vertex * 3 vertices per triangle)"),!1;return!0},t.prototype._getOrCreateFaces=function(e,t){if(t.faces)return t.faces;for(var r=new Uint32Array(e.vertexAttributes.position.length/3),a=0;a<r.length;a++)r[a]=a;return r},t.prototype._isOutsideClippingArea=function(e){if(!this._context.clippingExtent)return!1;var t=e.vertexAttributes&&e.vertexAttributes.position;if(!t)return!1;var r,a=this._context.elevationProvider.spatialReference,o=t.length/3;return e.spatialReference.equals(a)?r=t:(r=new Float64Array(t.length),b.reproject(e.vertexAttributes.position,0,e.spatialReference,r,0,a,o)),b.computeBoundingBox(r,0,o,W),b.boundingBoxClipped(W,this._context.clippingExtent)},t.prototype._createGeometryInfo=function(e,t,r){var a,o;if(!v.canProject(e,this._context.layerView.view.spatialReference))return this.logger.warn("Geometry spatial reference is not compatible with the view"),null;if(this._isOutsideClippingArea(e))return null;var n=this._createBuffers(e,t);if(!n)return null;for(var i=n.positionBuffer,s=n.uvBuffer,l=n.colorBuffer,c=n.symbolColorBuffer,u=n.normalBuffer,f=n.tangentBuffer,m=n.objectTransformation,h=this._getOrCreateComponents(e),d=[],g=[],y=[],_=!1,x=0,b=h;x<b.length;x++){var C=b[x];if(!this._validateFaces(e,C))return null;var T=this._getOrCreateFaces(e,C);if(0!==T.length){var w=this._createComponentNormals(i,u,C,T);w.didFlipNormals&&(_=!0);var O=(a={},a[V.POSITION]={size:3,data:i},a[V.NORMAL]={size:3,data:w.normals},a),A=(o={},o[V.POSITION]=T,o[V.NORMAL]=w.indices,o);l&&(O[V.COLOR]={size:4,data:l},A[V.COLOR]=T),c&&(O[V.SYMBOLCOLOR]={size:4,data:c},A[V.SYMBOLCOLOR]=this._createColorIndices(C,T)),e.vertexAttributes.uv&&(O[V.UV0]={size:2,data:s},A[V.UV0]=T),e.vertexAttributes.tangent&&(O[V.TANGENT]={size:4,data:f},A[V.TANGENT]=T);var M=new E(O,A),N=new S(M,r+"_mesh");N.singleUse=!0,d.push(N),g.push(p.mat4f64.create()),y.push(this._getOrCreateMaterial(e,C))}}return _&&this.logger.warn("Normals have been automatically flipped to be consistent with the counter clock wise face winding order. It is better to generate mesh geometries that have consistent normals."),{geometries:d,transformations:g,materials:y,objectTransformation:m}},t.prototype._createEdgeMaterial=function(e){var t={opacity:this._getLayerOpacity()};return T.createMaterial(e,this.symbolLayer,t)},t}(C.default);t.Graphics3DMeshFillSymbolLayer=L;var B=m.vec3f64.create(),U=m.vec3f64.create(),j=m.vec3f64.create(),G=m.vec3f64.create(),D=m.vec3f64.create(),z=p.mat4f64.create(),H=c.mat3f64.create(),W=d.create(),q=[new g];t.default=L});