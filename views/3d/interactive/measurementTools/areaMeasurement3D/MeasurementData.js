// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.12/esri/copyright.txt for details.

define(["require","exports","../../../../../core/Quantity","../../../../../core/libs/earcut/earcut","../../../../../core/libs/gl-matrix-2/vec2","../../../../../core/libs/gl-matrix-2/vec2f64","../../../../../core/libs/gl-matrix-2/vec3","../../../../../core/libs/gl-matrix-2/vec3f64","../../../../../core/libs/gl-matrix-2/vec4f64","../../../../../geometry/SpatialReference","../../../../../geometry/support/intersects","../support/measurementUtils","../support/viewUtils","../../../support/earthUtils","../../../support/mathUtils","../../../support/mathUtils","../../../support/projectionUtils"],function(e,t,i,s,r,o,n,h,a,c,d,p,l,g,m,u,f){function v(e,t,i){for(var s=new Float64Array(e.length*i),r=0;r<e.length;++r)for(var o=e[r],n=0;n<i;++n)s[r*i+n]=o[n];return s}return function(){function e(){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.areaCentroidWorldCoords=h.vec3f64.create(),this.areaCentroidRenderCoords=h.vec3f64.create(),this.geodesicAreaCentroidRenderCoords=h.vec3f64.create(),this._length=0,this._centroidRenderCoords=h.vec3f64.create(),this._planeWorldCoords=a.vec4f64.create(),this._worldUp=h.vec3f64.create(),this._worldTangent=h.vec3f64.create(),this._frame=[h.vec3f64.create(),h.vec3f64.create(),h.vec3f64.create()],this._tempU=h.vec3f64.create(),this._tempV=h.vec3f64.create(),this._tempVec3=h.vec3f64.create(),this._tempSphere={center:h.vec3f64.create(),radius:0}}return e.prototype.update=function(e,t,s,r,o,h,a,c){t.clear(),this._resize(e.length);for(var d=f.canProject(s.spatialReference,f.SphericalECEFSpatialReference)&&f.canProjectToWGS84ComparableLonLat(s.spatialReference),p=this.positionsGeographic,l=this.positionsWorldCoords,g=this.positionsRenderCoords,m=this.positionsSpherical,u=0;u<e.length;++u){var v=e.vertex(u);f.pointToVector(v,l[u],a),f.pointToVector(v,g[u],h),d&&(f.pointToWGS84ComparableLonLat(v,p[u]),f.pointToVector(v,m[u],f.SphericalECEFSpatialReference),n.vec3.normalize(m[u],m[u]))}var _=this._updatePathLengths(o);if(this.pathLength=this._length>0?new i(r.normalizeDistance(_),"meters"):null,d){var S=this._updateGeodesicPathLengths(o);this.geodesicPathLength=this._length>0?new i(S,"meters"):null}else this.geodesicPathLength=null;if(!o)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),void this.geodesicIntersectingSegments.clear();this._updateArea(s,r,h,a,c),d&&this._updateGeodesicArea(s,h)},e.prototype._resize=function(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(h.vec3f64.create()),this.positionsRenderCoords.push(h.vec3f64.create()),this.positionsProjectedWorldCoords.push(o.vec2f64.create()),this.positionsFittedRenderCoords.push(h.vec3f64.create()),this.positionsGeographic.push(h.vec3f64.create()),this.positionsSpherical.push(h.vec3f64.create()),this.positionsStereographic.push(o.vec2f64.create()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length},e.prototype._updatePathLengths=function(e){for(var t=this.positionsWorldCoords,i=this.pathSegmentLengths,s=0,r=0;r<this._length;++r){var o=i[r]=n.vec3.distance(t[r],t[(r+1)%this._length]);(r<this._length-1||e)&&(s+=o)}return s},e.prototype._updateGeodesicPathLengths=function(e){for(var t=this.positionsGeographic,i=this.geodesicPathSegmentLengths,s=0,r=0;r<this._length;++r){var o=i[r]=p.segmentLengthGeodesicVector(t[r],t[(r+1)%this._length]);(r<this._length-1||e)&&(s+=o)}return s},e.prototype._updateArea=function(e,t,s,o,h){var a=e.renderCoordsHelper,c=this.positionsWorldCoords,d=this.positionsRenderCoords,g=this.positionsProjectedWorldCoords,m=this.positionsFittedRenderCoords,v=this._planeWorldCoords,_=this._centroidRenderCoords;l.midpoint(d,_),a.worldUpAtPosition(_,this._worldUp),a.worldBasisAtPosition(_,0,this._worldTangent),f.transformDirection(_,this._worldUp,s,this._worldUp,o),f.transformDirection(_,this._worldTangent,s,this._worldTangent,o),p.bestFitPlane(c,v),this.fittingMode=this._selectFittingMode(v,c,this._worldUp,h);var S=0;if("horizontal"===this.fittingMode){var C=-1/0;d.forEach(function(e,t){var i=a.getAltitude(d[t]);i>C&&(C=i,S=t)})}var L=c[S],w=v,R=this._worldTangent;"horizontal"===this.fittingMode?w=this._worldUp:"vertical"===this.fittingMode&&(w=this._tempVec3,R=this._worldUp,u.makeOrthonormal(v,this._worldUp,w)),n.vec3.copy(this._frame[2],w),u.makeOrthonormal(R,w,this._frame[0]),n.vec3.cross(this._frame[1],this._frame[0],this._frame[2]),n.vec3.negate(this._frame[1],this._frame[1]);for(var P=this._tempVec3,A=this._tempU,U=this._tempV,W=0;W<this._length;++W){var y=g[W],G=m[W];n.vec3.subtract(P,c[W],L),r.vec2.set(y,n.vec3.dot(this._frame[0],P),n.vec3.dot(this._frame[1],P)),n.vec3.scale(A,this._frame[0],y[0]),n.vec3.scale(U,this._frame[1],y[1]),n.vec3.add(P,A,U),n.vec3.add(P,P,L),f.vectorToVector(P,o,G,s)}this.perimeterLength=this._length>0?new i(t.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,l.midpoint(m,this.areaCentroidRenderCoords),f.vectorToVector(this.areaCentroidRenderCoords,s,this.areaCentroidWorldCoords,o),this._updateIntersectingSegments(),this.area=0===this.intersectingSegments.size?new i(t.normalizeArea(this._computeArea()),"square-meters"):null},e.prototype._updateGeodesicArea=function(e,t){var s=e.renderCoordsHelper,o=this.positionsSpherical,h=this.positionsStereographic,a=this._tempVec3,c=p.fitHemisphere(o,a);if(!c)return void(this.geodesicArea=null);var d=this._tempU,l=this._tempV;u.tangentFrame(a,d,l);for(var m=0;m<this._length;++m){var v=n.vec3.dot(o[m],d),_=n.vec3.dot(o[m],l),S=n.vec3.dot(o[m],a);r.vec2.set(h[m],v/S,_/S)}n.vec3.scale(a,a,g.earthRadius),s.toRenderCoords(a,f.SphericalECEFSpatialReference,this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=c&&0===this.geodesicIntersectingSegments.size?new i(this._computeGeodesicArea(),"square-meters"):null},e.prototype._updatePerimeterLengths=function(){for(var e=this.positionsProjectedWorldCoords,t=this.perimeterSegmentLengths,i=0,s=0;s<this._length;++s){i+=t[s]=r.vec2.distance(e[s],e[(s+1)%this._length])}return i},e.prototype._updateIntersectingSegments=function(){var e=this.positionsProjectedWorldCoords,t=this.intersectingSegments;t.clear();for(var i=0;i<this._length;++i)for(var s=i+2;s<this._length;++s)if((s+1)%this._length!==i){var r=e[i],o=e[(i+1)%this._length],n=e[s],h=e[(s+1)%this._length];d.segmentIntersects(r,o,n,h)&&(t.add(i),t.add(s))}},e.prototype._computeArea=function(){for(var e=this.positionsProjectedWorldCoords,t=v(e,2,2),i=this.triangleIndices=new Uint32Array(s(t,[],2)),r=0,o=0;o<i.length;o+=3)r+=p.triangleAreaEuclidean(e[i[o]],e[i[o+1]],e[i[o+2]]);return r},e.prototype._updateGeodesicIntersectingSegments=function(){var e=this.positionsStereographic,t=this.geodesicIntersectingSegments;t.clear();for(var i=0;i<this._length;++i)for(var s=i+2;s<this._length;++s)if((s+1)%this._length!==i){var r=e[i],o=e[(i+1)%this._length],n=e[s],h=e[(s+1)%this._length];d.segmentIntersects(r,o,n,h)&&(t.add(i),t.add(s))}},e.prototype._computeGeodesicArea=function(){for(var e=this.positionsGeographic,t=this.positionsStereographic,i=v(t,2,2),r=this.geodesicTriangleIndices=new Uint32Array(s(i,[],2)),o=0,n=0;n<r.length;n+=3)o+=p.triangleAreaGeodesic(e[r[n]],e[r[n+1]],e[r[n+2]],c.WGS84);return o},e.prototype._selectFittingMode=function(e,t,i,s){var r=t.map(function(t){return Math.abs(p.planePointDistance(e,t))}).reduce(function(e,t){return Math.max(e,t)},0);p.boundingSphere(t,this._tempSphere);var o=2*this._tempSphere.radius,h=r/o,a=h<s.maxRelativeErrorCoplanar,c=h<s.maxRelativeErrorAlmostCoplanar,d="horizontal";if(a)d="oblique";else if(c){var l=Math.abs(n.vec3.dot(i,e))>Math.cos(m.deg2rad(s.verticalAngleThreshold));d=l?"horizontal":"vertical"}return d},e}()});